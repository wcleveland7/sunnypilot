#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3746421578053593084) {
   out_3746421578053593084[0] = 0;
   out_3746421578053593084[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3746421578053593084[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3746421578053593084[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3746421578053593084[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3746421578053593084[5] = -sin(in_vec[1]);
   out_3746421578053593084[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3746421578053593084[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3746421578053593084[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3746421578053593084[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3746421578053593084[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3746421578053593084[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3746421578053593084[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3746421578053593084[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3746421578053593084[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3746421578053593084[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3746421578053593084[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3746421578053593084[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_105236110951022335) {
   out_105236110951022335[0] = delta_x[0] + nom_x[0];
   out_105236110951022335[1] = delta_x[1] + nom_x[1];
   out_105236110951022335[2] = delta_x[2] + nom_x[2];
   out_105236110951022335[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_105236110951022335[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_105236110951022335[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_105236110951022335[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_105236110951022335[7] = delta_x[6] + nom_x[7];
   out_105236110951022335[8] = delta_x[7] + nom_x[8];
   out_105236110951022335[9] = delta_x[8] + nom_x[9];
   out_105236110951022335[10] = delta_x[9] + nom_x[10];
   out_105236110951022335[11] = delta_x[10] + nom_x[11];
   out_105236110951022335[12] = delta_x[11] + nom_x[12];
   out_105236110951022335[13] = delta_x[12] + nom_x[13];
   out_105236110951022335[14] = delta_x[13] + nom_x[14];
   out_105236110951022335[15] = delta_x[14] + nom_x[15];
   out_105236110951022335[16] = delta_x[15] + nom_x[16];
   out_105236110951022335[17] = delta_x[16] + nom_x[17];
   out_105236110951022335[18] = delta_x[17] + nom_x[18];
   out_105236110951022335[19] = delta_x[18] + nom_x[19];
   out_105236110951022335[20] = delta_x[19] + nom_x[20];
   out_105236110951022335[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2568821321730323506) {
   out_2568821321730323506[0] = -nom_x[0] + true_x[0];
   out_2568821321730323506[1] = -nom_x[1] + true_x[1];
   out_2568821321730323506[2] = -nom_x[2] + true_x[2];
   out_2568821321730323506[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2568821321730323506[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2568821321730323506[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2568821321730323506[6] = -nom_x[7] + true_x[7];
   out_2568821321730323506[7] = -nom_x[8] + true_x[8];
   out_2568821321730323506[8] = -nom_x[9] + true_x[9];
   out_2568821321730323506[9] = -nom_x[10] + true_x[10];
   out_2568821321730323506[10] = -nom_x[11] + true_x[11];
   out_2568821321730323506[11] = -nom_x[12] + true_x[12];
   out_2568821321730323506[12] = -nom_x[13] + true_x[13];
   out_2568821321730323506[13] = -nom_x[14] + true_x[14];
   out_2568821321730323506[14] = -nom_x[15] + true_x[15];
   out_2568821321730323506[15] = -nom_x[16] + true_x[16];
   out_2568821321730323506[16] = -nom_x[17] + true_x[17];
   out_2568821321730323506[17] = -nom_x[18] + true_x[18];
   out_2568821321730323506[18] = -nom_x[19] + true_x[19];
   out_2568821321730323506[19] = -nom_x[20] + true_x[20];
   out_2568821321730323506[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4178029040380659435) {
   out_4178029040380659435[0] = 1.0;
   out_4178029040380659435[1] = 0;
   out_4178029040380659435[2] = 0;
   out_4178029040380659435[3] = 0;
   out_4178029040380659435[4] = 0;
   out_4178029040380659435[5] = 0;
   out_4178029040380659435[6] = 0;
   out_4178029040380659435[7] = 0;
   out_4178029040380659435[8] = 0;
   out_4178029040380659435[9] = 0;
   out_4178029040380659435[10] = 0;
   out_4178029040380659435[11] = 0;
   out_4178029040380659435[12] = 0;
   out_4178029040380659435[13] = 0;
   out_4178029040380659435[14] = 0;
   out_4178029040380659435[15] = 0;
   out_4178029040380659435[16] = 0;
   out_4178029040380659435[17] = 0;
   out_4178029040380659435[18] = 0;
   out_4178029040380659435[19] = 0;
   out_4178029040380659435[20] = 0;
   out_4178029040380659435[21] = 0;
   out_4178029040380659435[22] = 1.0;
   out_4178029040380659435[23] = 0;
   out_4178029040380659435[24] = 0;
   out_4178029040380659435[25] = 0;
   out_4178029040380659435[26] = 0;
   out_4178029040380659435[27] = 0;
   out_4178029040380659435[28] = 0;
   out_4178029040380659435[29] = 0;
   out_4178029040380659435[30] = 0;
   out_4178029040380659435[31] = 0;
   out_4178029040380659435[32] = 0;
   out_4178029040380659435[33] = 0;
   out_4178029040380659435[34] = 0;
   out_4178029040380659435[35] = 0;
   out_4178029040380659435[36] = 0;
   out_4178029040380659435[37] = 0;
   out_4178029040380659435[38] = 0;
   out_4178029040380659435[39] = 0;
   out_4178029040380659435[40] = 0;
   out_4178029040380659435[41] = 0;
   out_4178029040380659435[42] = 0;
   out_4178029040380659435[43] = 0;
   out_4178029040380659435[44] = 1.0;
   out_4178029040380659435[45] = 0;
   out_4178029040380659435[46] = 0;
   out_4178029040380659435[47] = 0;
   out_4178029040380659435[48] = 0;
   out_4178029040380659435[49] = 0;
   out_4178029040380659435[50] = 0;
   out_4178029040380659435[51] = 0;
   out_4178029040380659435[52] = 0;
   out_4178029040380659435[53] = 0;
   out_4178029040380659435[54] = 0;
   out_4178029040380659435[55] = 0;
   out_4178029040380659435[56] = 0;
   out_4178029040380659435[57] = 0;
   out_4178029040380659435[58] = 0;
   out_4178029040380659435[59] = 0;
   out_4178029040380659435[60] = 0;
   out_4178029040380659435[61] = 0;
   out_4178029040380659435[62] = 0;
   out_4178029040380659435[63] = 0;
   out_4178029040380659435[64] = 0;
   out_4178029040380659435[65] = 0;
   out_4178029040380659435[66] = -0.5*state[4];
   out_4178029040380659435[67] = -0.5*state[5];
   out_4178029040380659435[68] = -0.5*state[6];
   out_4178029040380659435[69] = 0;
   out_4178029040380659435[70] = 0;
   out_4178029040380659435[71] = 0;
   out_4178029040380659435[72] = 0;
   out_4178029040380659435[73] = 0;
   out_4178029040380659435[74] = 0;
   out_4178029040380659435[75] = 0;
   out_4178029040380659435[76] = 0;
   out_4178029040380659435[77] = 0;
   out_4178029040380659435[78] = 0;
   out_4178029040380659435[79] = 0;
   out_4178029040380659435[80] = 0;
   out_4178029040380659435[81] = 0;
   out_4178029040380659435[82] = 0;
   out_4178029040380659435[83] = 0;
   out_4178029040380659435[84] = 0;
   out_4178029040380659435[85] = 0;
   out_4178029040380659435[86] = 0;
   out_4178029040380659435[87] = 0.5*state[3];
   out_4178029040380659435[88] = 0.5*state[6];
   out_4178029040380659435[89] = -0.5*state[5];
   out_4178029040380659435[90] = 0;
   out_4178029040380659435[91] = 0;
   out_4178029040380659435[92] = 0;
   out_4178029040380659435[93] = 0;
   out_4178029040380659435[94] = 0;
   out_4178029040380659435[95] = 0;
   out_4178029040380659435[96] = 0;
   out_4178029040380659435[97] = 0;
   out_4178029040380659435[98] = 0;
   out_4178029040380659435[99] = 0;
   out_4178029040380659435[100] = 0;
   out_4178029040380659435[101] = 0;
   out_4178029040380659435[102] = 0;
   out_4178029040380659435[103] = 0;
   out_4178029040380659435[104] = 0;
   out_4178029040380659435[105] = 0;
   out_4178029040380659435[106] = 0;
   out_4178029040380659435[107] = 0;
   out_4178029040380659435[108] = -0.5*state[6];
   out_4178029040380659435[109] = 0.5*state[3];
   out_4178029040380659435[110] = 0.5*state[4];
   out_4178029040380659435[111] = 0;
   out_4178029040380659435[112] = 0;
   out_4178029040380659435[113] = 0;
   out_4178029040380659435[114] = 0;
   out_4178029040380659435[115] = 0;
   out_4178029040380659435[116] = 0;
   out_4178029040380659435[117] = 0;
   out_4178029040380659435[118] = 0;
   out_4178029040380659435[119] = 0;
   out_4178029040380659435[120] = 0;
   out_4178029040380659435[121] = 0;
   out_4178029040380659435[122] = 0;
   out_4178029040380659435[123] = 0;
   out_4178029040380659435[124] = 0;
   out_4178029040380659435[125] = 0;
   out_4178029040380659435[126] = 0;
   out_4178029040380659435[127] = 0;
   out_4178029040380659435[128] = 0;
   out_4178029040380659435[129] = 0.5*state[5];
   out_4178029040380659435[130] = -0.5*state[4];
   out_4178029040380659435[131] = 0.5*state[3];
   out_4178029040380659435[132] = 0;
   out_4178029040380659435[133] = 0;
   out_4178029040380659435[134] = 0;
   out_4178029040380659435[135] = 0;
   out_4178029040380659435[136] = 0;
   out_4178029040380659435[137] = 0;
   out_4178029040380659435[138] = 0;
   out_4178029040380659435[139] = 0;
   out_4178029040380659435[140] = 0;
   out_4178029040380659435[141] = 0;
   out_4178029040380659435[142] = 0;
   out_4178029040380659435[143] = 0;
   out_4178029040380659435[144] = 0;
   out_4178029040380659435[145] = 0;
   out_4178029040380659435[146] = 0;
   out_4178029040380659435[147] = 0;
   out_4178029040380659435[148] = 0;
   out_4178029040380659435[149] = 0;
   out_4178029040380659435[150] = 0;
   out_4178029040380659435[151] = 0;
   out_4178029040380659435[152] = 0;
   out_4178029040380659435[153] = 1.0;
   out_4178029040380659435[154] = 0;
   out_4178029040380659435[155] = 0;
   out_4178029040380659435[156] = 0;
   out_4178029040380659435[157] = 0;
   out_4178029040380659435[158] = 0;
   out_4178029040380659435[159] = 0;
   out_4178029040380659435[160] = 0;
   out_4178029040380659435[161] = 0;
   out_4178029040380659435[162] = 0;
   out_4178029040380659435[163] = 0;
   out_4178029040380659435[164] = 0;
   out_4178029040380659435[165] = 0;
   out_4178029040380659435[166] = 0;
   out_4178029040380659435[167] = 0;
   out_4178029040380659435[168] = 0;
   out_4178029040380659435[169] = 0;
   out_4178029040380659435[170] = 0;
   out_4178029040380659435[171] = 0;
   out_4178029040380659435[172] = 0;
   out_4178029040380659435[173] = 0;
   out_4178029040380659435[174] = 0;
   out_4178029040380659435[175] = 1.0;
   out_4178029040380659435[176] = 0;
   out_4178029040380659435[177] = 0;
   out_4178029040380659435[178] = 0;
   out_4178029040380659435[179] = 0;
   out_4178029040380659435[180] = 0;
   out_4178029040380659435[181] = 0;
   out_4178029040380659435[182] = 0;
   out_4178029040380659435[183] = 0;
   out_4178029040380659435[184] = 0;
   out_4178029040380659435[185] = 0;
   out_4178029040380659435[186] = 0;
   out_4178029040380659435[187] = 0;
   out_4178029040380659435[188] = 0;
   out_4178029040380659435[189] = 0;
   out_4178029040380659435[190] = 0;
   out_4178029040380659435[191] = 0;
   out_4178029040380659435[192] = 0;
   out_4178029040380659435[193] = 0;
   out_4178029040380659435[194] = 0;
   out_4178029040380659435[195] = 0;
   out_4178029040380659435[196] = 0;
   out_4178029040380659435[197] = 1.0;
   out_4178029040380659435[198] = 0;
   out_4178029040380659435[199] = 0;
   out_4178029040380659435[200] = 0;
   out_4178029040380659435[201] = 0;
   out_4178029040380659435[202] = 0;
   out_4178029040380659435[203] = 0;
   out_4178029040380659435[204] = 0;
   out_4178029040380659435[205] = 0;
   out_4178029040380659435[206] = 0;
   out_4178029040380659435[207] = 0;
   out_4178029040380659435[208] = 0;
   out_4178029040380659435[209] = 0;
   out_4178029040380659435[210] = 0;
   out_4178029040380659435[211] = 0;
   out_4178029040380659435[212] = 0;
   out_4178029040380659435[213] = 0;
   out_4178029040380659435[214] = 0;
   out_4178029040380659435[215] = 0;
   out_4178029040380659435[216] = 0;
   out_4178029040380659435[217] = 0;
   out_4178029040380659435[218] = 0;
   out_4178029040380659435[219] = 1.0;
   out_4178029040380659435[220] = 0;
   out_4178029040380659435[221] = 0;
   out_4178029040380659435[222] = 0;
   out_4178029040380659435[223] = 0;
   out_4178029040380659435[224] = 0;
   out_4178029040380659435[225] = 0;
   out_4178029040380659435[226] = 0;
   out_4178029040380659435[227] = 0;
   out_4178029040380659435[228] = 0;
   out_4178029040380659435[229] = 0;
   out_4178029040380659435[230] = 0;
   out_4178029040380659435[231] = 0;
   out_4178029040380659435[232] = 0;
   out_4178029040380659435[233] = 0;
   out_4178029040380659435[234] = 0;
   out_4178029040380659435[235] = 0;
   out_4178029040380659435[236] = 0;
   out_4178029040380659435[237] = 0;
   out_4178029040380659435[238] = 0;
   out_4178029040380659435[239] = 0;
   out_4178029040380659435[240] = 0;
   out_4178029040380659435[241] = 1.0;
   out_4178029040380659435[242] = 0;
   out_4178029040380659435[243] = 0;
   out_4178029040380659435[244] = 0;
   out_4178029040380659435[245] = 0;
   out_4178029040380659435[246] = 0;
   out_4178029040380659435[247] = 0;
   out_4178029040380659435[248] = 0;
   out_4178029040380659435[249] = 0;
   out_4178029040380659435[250] = 0;
   out_4178029040380659435[251] = 0;
   out_4178029040380659435[252] = 0;
   out_4178029040380659435[253] = 0;
   out_4178029040380659435[254] = 0;
   out_4178029040380659435[255] = 0;
   out_4178029040380659435[256] = 0;
   out_4178029040380659435[257] = 0;
   out_4178029040380659435[258] = 0;
   out_4178029040380659435[259] = 0;
   out_4178029040380659435[260] = 0;
   out_4178029040380659435[261] = 0;
   out_4178029040380659435[262] = 0;
   out_4178029040380659435[263] = 1.0;
   out_4178029040380659435[264] = 0;
   out_4178029040380659435[265] = 0;
   out_4178029040380659435[266] = 0;
   out_4178029040380659435[267] = 0;
   out_4178029040380659435[268] = 0;
   out_4178029040380659435[269] = 0;
   out_4178029040380659435[270] = 0;
   out_4178029040380659435[271] = 0;
   out_4178029040380659435[272] = 0;
   out_4178029040380659435[273] = 0;
   out_4178029040380659435[274] = 0;
   out_4178029040380659435[275] = 0;
   out_4178029040380659435[276] = 0;
   out_4178029040380659435[277] = 0;
   out_4178029040380659435[278] = 0;
   out_4178029040380659435[279] = 0;
   out_4178029040380659435[280] = 0;
   out_4178029040380659435[281] = 0;
   out_4178029040380659435[282] = 0;
   out_4178029040380659435[283] = 0;
   out_4178029040380659435[284] = 0;
   out_4178029040380659435[285] = 1.0;
   out_4178029040380659435[286] = 0;
   out_4178029040380659435[287] = 0;
   out_4178029040380659435[288] = 0;
   out_4178029040380659435[289] = 0;
   out_4178029040380659435[290] = 0;
   out_4178029040380659435[291] = 0;
   out_4178029040380659435[292] = 0;
   out_4178029040380659435[293] = 0;
   out_4178029040380659435[294] = 0;
   out_4178029040380659435[295] = 0;
   out_4178029040380659435[296] = 0;
   out_4178029040380659435[297] = 0;
   out_4178029040380659435[298] = 0;
   out_4178029040380659435[299] = 0;
   out_4178029040380659435[300] = 0;
   out_4178029040380659435[301] = 0;
   out_4178029040380659435[302] = 0;
   out_4178029040380659435[303] = 0;
   out_4178029040380659435[304] = 0;
   out_4178029040380659435[305] = 0;
   out_4178029040380659435[306] = 0;
   out_4178029040380659435[307] = 1.0;
   out_4178029040380659435[308] = 0;
   out_4178029040380659435[309] = 0;
   out_4178029040380659435[310] = 0;
   out_4178029040380659435[311] = 0;
   out_4178029040380659435[312] = 0;
   out_4178029040380659435[313] = 0;
   out_4178029040380659435[314] = 0;
   out_4178029040380659435[315] = 0;
   out_4178029040380659435[316] = 0;
   out_4178029040380659435[317] = 0;
   out_4178029040380659435[318] = 0;
   out_4178029040380659435[319] = 0;
   out_4178029040380659435[320] = 0;
   out_4178029040380659435[321] = 0;
   out_4178029040380659435[322] = 0;
   out_4178029040380659435[323] = 0;
   out_4178029040380659435[324] = 0;
   out_4178029040380659435[325] = 0;
   out_4178029040380659435[326] = 0;
   out_4178029040380659435[327] = 0;
   out_4178029040380659435[328] = 0;
   out_4178029040380659435[329] = 1.0;
   out_4178029040380659435[330] = 0;
   out_4178029040380659435[331] = 0;
   out_4178029040380659435[332] = 0;
   out_4178029040380659435[333] = 0;
   out_4178029040380659435[334] = 0;
   out_4178029040380659435[335] = 0;
   out_4178029040380659435[336] = 0;
   out_4178029040380659435[337] = 0;
   out_4178029040380659435[338] = 0;
   out_4178029040380659435[339] = 0;
   out_4178029040380659435[340] = 0;
   out_4178029040380659435[341] = 0;
   out_4178029040380659435[342] = 0;
   out_4178029040380659435[343] = 0;
   out_4178029040380659435[344] = 0;
   out_4178029040380659435[345] = 0;
   out_4178029040380659435[346] = 0;
   out_4178029040380659435[347] = 0;
   out_4178029040380659435[348] = 0;
   out_4178029040380659435[349] = 0;
   out_4178029040380659435[350] = 0;
   out_4178029040380659435[351] = 1.0;
   out_4178029040380659435[352] = 0;
   out_4178029040380659435[353] = 0;
   out_4178029040380659435[354] = 0;
   out_4178029040380659435[355] = 0;
   out_4178029040380659435[356] = 0;
   out_4178029040380659435[357] = 0;
   out_4178029040380659435[358] = 0;
   out_4178029040380659435[359] = 0;
   out_4178029040380659435[360] = 0;
   out_4178029040380659435[361] = 0;
   out_4178029040380659435[362] = 0;
   out_4178029040380659435[363] = 0;
   out_4178029040380659435[364] = 0;
   out_4178029040380659435[365] = 0;
   out_4178029040380659435[366] = 0;
   out_4178029040380659435[367] = 0;
   out_4178029040380659435[368] = 0;
   out_4178029040380659435[369] = 0;
   out_4178029040380659435[370] = 0;
   out_4178029040380659435[371] = 0;
   out_4178029040380659435[372] = 0;
   out_4178029040380659435[373] = 1.0;
   out_4178029040380659435[374] = 0;
   out_4178029040380659435[375] = 0;
   out_4178029040380659435[376] = 0;
   out_4178029040380659435[377] = 0;
   out_4178029040380659435[378] = 0;
   out_4178029040380659435[379] = 0;
   out_4178029040380659435[380] = 0;
   out_4178029040380659435[381] = 0;
   out_4178029040380659435[382] = 0;
   out_4178029040380659435[383] = 0;
   out_4178029040380659435[384] = 0;
   out_4178029040380659435[385] = 0;
   out_4178029040380659435[386] = 0;
   out_4178029040380659435[387] = 0;
   out_4178029040380659435[388] = 0;
   out_4178029040380659435[389] = 0;
   out_4178029040380659435[390] = 0;
   out_4178029040380659435[391] = 0;
   out_4178029040380659435[392] = 0;
   out_4178029040380659435[393] = 0;
   out_4178029040380659435[394] = 0;
   out_4178029040380659435[395] = 1.0;
   out_4178029040380659435[396] = 0;
   out_4178029040380659435[397] = 0;
   out_4178029040380659435[398] = 0;
   out_4178029040380659435[399] = 0;
   out_4178029040380659435[400] = 0;
   out_4178029040380659435[401] = 0;
   out_4178029040380659435[402] = 0;
   out_4178029040380659435[403] = 0;
   out_4178029040380659435[404] = 0;
   out_4178029040380659435[405] = 0;
   out_4178029040380659435[406] = 0;
   out_4178029040380659435[407] = 0;
   out_4178029040380659435[408] = 0;
   out_4178029040380659435[409] = 0;
   out_4178029040380659435[410] = 0;
   out_4178029040380659435[411] = 0;
   out_4178029040380659435[412] = 0;
   out_4178029040380659435[413] = 0;
   out_4178029040380659435[414] = 0;
   out_4178029040380659435[415] = 0;
   out_4178029040380659435[416] = 0;
   out_4178029040380659435[417] = 1.0;
   out_4178029040380659435[418] = 0;
   out_4178029040380659435[419] = 0;
   out_4178029040380659435[420] = 0;
   out_4178029040380659435[421] = 0;
   out_4178029040380659435[422] = 0;
   out_4178029040380659435[423] = 0;
   out_4178029040380659435[424] = 0;
   out_4178029040380659435[425] = 0;
   out_4178029040380659435[426] = 0;
   out_4178029040380659435[427] = 0;
   out_4178029040380659435[428] = 0;
   out_4178029040380659435[429] = 0;
   out_4178029040380659435[430] = 0;
   out_4178029040380659435[431] = 0;
   out_4178029040380659435[432] = 0;
   out_4178029040380659435[433] = 0;
   out_4178029040380659435[434] = 0;
   out_4178029040380659435[435] = 0;
   out_4178029040380659435[436] = 0;
   out_4178029040380659435[437] = 0;
   out_4178029040380659435[438] = 0;
   out_4178029040380659435[439] = 1.0;
   out_4178029040380659435[440] = 0;
   out_4178029040380659435[441] = 0;
   out_4178029040380659435[442] = 0;
   out_4178029040380659435[443] = 0;
   out_4178029040380659435[444] = 0;
   out_4178029040380659435[445] = 0;
   out_4178029040380659435[446] = 0;
   out_4178029040380659435[447] = 0;
   out_4178029040380659435[448] = 0;
   out_4178029040380659435[449] = 0;
   out_4178029040380659435[450] = 0;
   out_4178029040380659435[451] = 0;
   out_4178029040380659435[452] = 0;
   out_4178029040380659435[453] = 0;
   out_4178029040380659435[454] = 0;
   out_4178029040380659435[455] = 0;
   out_4178029040380659435[456] = 0;
   out_4178029040380659435[457] = 0;
   out_4178029040380659435[458] = 0;
   out_4178029040380659435[459] = 0;
   out_4178029040380659435[460] = 0;
   out_4178029040380659435[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2854293671312532649) {
   out_2854293671312532649[0] = dt*state[7] + state[0];
   out_2854293671312532649[1] = dt*state[8] + state[1];
   out_2854293671312532649[2] = dt*state[9] + state[2];
   out_2854293671312532649[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2854293671312532649[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2854293671312532649[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2854293671312532649[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2854293671312532649[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2854293671312532649[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2854293671312532649[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2854293671312532649[10] = state[10];
   out_2854293671312532649[11] = state[11];
   out_2854293671312532649[12] = state[12];
   out_2854293671312532649[13] = state[13];
   out_2854293671312532649[14] = state[14];
   out_2854293671312532649[15] = state[15];
   out_2854293671312532649[16] = state[16];
   out_2854293671312532649[17] = state[17];
   out_2854293671312532649[18] = state[18];
   out_2854293671312532649[19] = state[19];
   out_2854293671312532649[20] = state[20];
   out_2854293671312532649[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2734333177670994956) {
   out_2734333177670994956[0] = 1;
   out_2734333177670994956[1] = 0;
   out_2734333177670994956[2] = 0;
   out_2734333177670994956[3] = 0;
   out_2734333177670994956[4] = 0;
   out_2734333177670994956[5] = 0;
   out_2734333177670994956[6] = dt;
   out_2734333177670994956[7] = 0;
   out_2734333177670994956[8] = 0;
   out_2734333177670994956[9] = 0;
   out_2734333177670994956[10] = 0;
   out_2734333177670994956[11] = 0;
   out_2734333177670994956[12] = 0;
   out_2734333177670994956[13] = 0;
   out_2734333177670994956[14] = 0;
   out_2734333177670994956[15] = 0;
   out_2734333177670994956[16] = 0;
   out_2734333177670994956[17] = 0;
   out_2734333177670994956[18] = 0;
   out_2734333177670994956[19] = 0;
   out_2734333177670994956[20] = 0;
   out_2734333177670994956[21] = 0;
   out_2734333177670994956[22] = 1;
   out_2734333177670994956[23] = 0;
   out_2734333177670994956[24] = 0;
   out_2734333177670994956[25] = 0;
   out_2734333177670994956[26] = 0;
   out_2734333177670994956[27] = 0;
   out_2734333177670994956[28] = dt;
   out_2734333177670994956[29] = 0;
   out_2734333177670994956[30] = 0;
   out_2734333177670994956[31] = 0;
   out_2734333177670994956[32] = 0;
   out_2734333177670994956[33] = 0;
   out_2734333177670994956[34] = 0;
   out_2734333177670994956[35] = 0;
   out_2734333177670994956[36] = 0;
   out_2734333177670994956[37] = 0;
   out_2734333177670994956[38] = 0;
   out_2734333177670994956[39] = 0;
   out_2734333177670994956[40] = 0;
   out_2734333177670994956[41] = 0;
   out_2734333177670994956[42] = 0;
   out_2734333177670994956[43] = 0;
   out_2734333177670994956[44] = 1;
   out_2734333177670994956[45] = 0;
   out_2734333177670994956[46] = 0;
   out_2734333177670994956[47] = 0;
   out_2734333177670994956[48] = 0;
   out_2734333177670994956[49] = 0;
   out_2734333177670994956[50] = dt;
   out_2734333177670994956[51] = 0;
   out_2734333177670994956[52] = 0;
   out_2734333177670994956[53] = 0;
   out_2734333177670994956[54] = 0;
   out_2734333177670994956[55] = 0;
   out_2734333177670994956[56] = 0;
   out_2734333177670994956[57] = 0;
   out_2734333177670994956[58] = 0;
   out_2734333177670994956[59] = 0;
   out_2734333177670994956[60] = 0;
   out_2734333177670994956[61] = 0;
   out_2734333177670994956[62] = 0;
   out_2734333177670994956[63] = 0;
   out_2734333177670994956[64] = 0;
   out_2734333177670994956[65] = 0;
   out_2734333177670994956[66] = 1;
   out_2734333177670994956[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2734333177670994956[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2734333177670994956[69] = 0;
   out_2734333177670994956[70] = 0;
   out_2734333177670994956[71] = 0;
   out_2734333177670994956[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2734333177670994956[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2734333177670994956[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2734333177670994956[75] = 0;
   out_2734333177670994956[76] = 0;
   out_2734333177670994956[77] = 0;
   out_2734333177670994956[78] = 0;
   out_2734333177670994956[79] = 0;
   out_2734333177670994956[80] = 0;
   out_2734333177670994956[81] = 0;
   out_2734333177670994956[82] = 0;
   out_2734333177670994956[83] = 0;
   out_2734333177670994956[84] = 0;
   out_2734333177670994956[85] = 0;
   out_2734333177670994956[86] = 0;
   out_2734333177670994956[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2734333177670994956[88] = 1;
   out_2734333177670994956[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2734333177670994956[90] = 0;
   out_2734333177670994956[91] = 0;
   out_2734333177670994956[92] = 0;
   out_2734333177670994956[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2734333177670994956[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2734333177670994956[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2734333177670994956[96] = 0;
   out_2734333177670994956[97] = 0;
   out_2734333177670994956[98] = 0;
   out_2734333177670994956[99] = 0;
   out_2734333177670994956[100] = 0;
   out_2734333177670994956[101] = 0;
   out_2734333177670994956[102] = 0;
   out_2734333177670994956[103] = 0;
   out_2734333177670994956[104] = 0;
   out_2734333177670994956[105] = 0;
   out_2734333177670994956[106] = 0;
   out_2734333177670994956[107] = 0;
   out_2734333177670994956[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2734333177670994956[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2734333177670994956[110] = 1;
   out_2734333177670994956[111] = 0;
   out_2734333177670994956[112] = 0;
   out_2734333177670994956[113] = 0;
   out_2734333177670994956[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2734333177670994956[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2734333177670994956[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2734333177670994956[117] = 0;
   out_2734333177670994956[118] = 0;
   out_2734333177670994956[119] = 0;
   out_2734333177670994956[120] = 0;
   out_2734333177670994956[121] = 0;
   out_2734333177670994956[122] = 0;
   out_2734333177670994956[123] = 0;
   out_2734333177670994956[124] = 0;
   out_2734333177670994956[125] = 0;
   out_2734333177670994956[126] = 0;
   out_2734333177670994956[127] = 0;
   out_2734333177670994956[128] = 0;
   out_2734333177670994956[129] = 0;
   out_2734333177670994956[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2734333177670994956[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2734333177670994956[132] = 1;
   out_2734333177670994956[133] = 0;
   out_2734333177670994956[134] = 0;
   out_2734333177670994956[135] = 0;
   out_2734333177670994956[136] = 0;
   out_2734333177670994956[137] = 0;
   out_2734333177670994956[138] = 0;
   out_2734333177670994956[139] = 0;
   out_2734333177670994956[140] = 0;
   out_2734333177670994956[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2734333177670994956[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2734333177670994956[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2734333177670994956[144] = 0;
   out_2734333177670994956[145] = 0;
   out_2734333177670994956[146] = 0;
   out_2734333177670994956[147] = 0;
   out_2734333177670994956[148] = 0;
   out_2734333177670994956[149] = 0;
   out_2734333177670994956[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2734333177670994956[151] = 0;
   out_2734333177670994956[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2734333177670994956[153] = 0;
   out_2734333177670994956[154] = 1;
   out_2734333177670994956[155] = 0;
   out_2734333177670994956[156] = 0;
   out_2734333177670994956[157] = 0;
   out_2734333177670994956[158] = 0;
   out_2734333177670994956[159] = 0;
   out_2734333177670994956[160] = 0;
   out_2734333177670994956[161] = 0;
   out_2734333177670994956[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2734333177670994956[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2734333177670994956[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2734333177670994956[165] = 0;
   out_2734333177670994956[166] = 0;
   out_2734333177670994956[167] = 0;
   out_2734333177670994956[168] = 0;
   out_2734333177670994956[169] = 0;
   out_2734333177670994956[170] = 0;
   out_2734333177670994956[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2734333177670994956[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2734333177670994956[173] = 0;
   out_2734333177670994956[174] = 0;
   out_2734333177670994956[175] = 0;
   out_2734333177670994956[176] = 1;
   out_2734333177670994956[177] = 0;
   out_2734333177670994956[178] = 0;
   out_2734333177670994956[179] = 0;
   out_2734333177670994956[180] = 0;
   out_2734333177670994956[181] = 0;
   out_2734333177670994956[182] = 0;
   out_2734333177670994956[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2734333177670994956[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2734333177670994956[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2734333177670994956[186] = 0;
   out_2734333177670994956[187] = 0;
   out_2734333177670994956[188] = 0;
   out_2734333177670994956[189] = 0;
   out_2734333177670994956[190] = 0;
   out_2734333177670994956[191] = 0;
   out_2734333177670994956[192] = 0;
   out_2734333177670994956[193] = 0;
   out_2734333177670994956[194] = 0;
   out_2734333177670994956[195] = 0;
   out_2734333177670994956[196] = 0;
   out_2734333177670994956[197] = 0;
   out_2734333177670994956[198] = 1;
   out_2734333177670994956[199] = 0;
   out_2734333177670994956[200] = 0;
   out_2734333177670994956[201] = 0;
   out_2734333177670994956[202] = 0;
   out_2734333177670994956[203] = 0;
   out_2734333177670994956[204] = 0;
   out_2734333177670994956[205] = 0;
   out_2734333177670994956[206] = 0;
   out_2734333177670994956[207] = 0;
   out_2734333177670994956[208] = 0;
   out_2734333177670994956[209] = 0;
   out_2734333177670994956[210] = 0;
   out_2734333177670994956[211] = 0;
   out_2734333177670994956[212] = 0;
   out_2734333177670994956[213] = 0;
   out_2734333177670994956[214] = 0;
   out_2734333177670994956[215] = 0;
   out_2734333177670994956[216] = 0;
   out_2734333177670994956[217] = 0;
   out_2734333177670994956[218] = 0;
   out_2734333177670994956[219] = 0;
   out_2734333177670994956[220] = 1;
   out_2734333177670994956[221] = 0;
   out_2734333177670994956[222] = 0;
   out_2734333177670994956[223] = 0;
   out_2734333177670994956[224] = 0;
   out_2734333177670994956[225] = 0;
   out_2734333177670994956[226] = 0;
   out_2734333177670994956[227] = 0;
   out_2734333177670994956[228] = 0;
   out_2734333177670994956[229] = 0;
   out_2734333177670994956[230] = 0;
   out_2734333177670994956[231] = 0;
   out_2734333177670994956[232] = 0;
   out_2734333177670994956[233] = 0;
   out_2734333177670994956[234] = 0;
   out_2734333177670994956[235] = 0;
   out_2734333177670994956[236] = 0;
   out_2734333177670994956[237] = 0;
   out_2734333177670994956[238] = 0;
   out_2734333177670994956[239] = 0;
   out_2734333177670994956[240] = 0;
   out_2734333177670994956[241] = 0;
   out_2734333177670994956[242] = 1;
   out_2734333177670994956[243] = 0;
   out_2734333177670994956[244] = 0;
   out_2734333177670994956[245] = 0;
   out_2734333177670994956[246] = 0;
   out_2734333177670994956[247] = 0;
   out_2734333177670994956[248] = 0;
   out_2734333177670994956[249] = 0;
   out_2734333177670994956[250] = 0;
   out_2734333177670994956[251] = 0;
   out_2734333177670994956[252] = 0;
   out_2734333177670994956[253] = 0;
   out_2734333177670994956[254] = 0;
   out_2734333177670994956[255] = 0;
   out_2734333177670994956[256] = 0;
   out_2734333177670994956[257] = 0;
   out_2734333177670994956[258] = 0;
   out_2734333177670994956[259] = 0;
   out_2734333177670994956[260] = 0;
   out_2734333177670994956[261] = 0;
   out_2734333177670994956[262] = 0;
   out_2734333177670994956[263] = 0;
   out_2734333177670994956[264] = 1;
   out_2734333177670994956[265] = 0;
   out_2734333177670994956[266] = 0;
   out_2734333177670994956[267] = 0;
   out_2734333177670994956[268] = 0;
   out_2734333177670994956[269] = 0;
   out_2734333177670994956[270] = 0;
   out_2734333177670994956[271] = 0;
   out_2734333177670994956[272] = 0;
   out_2734333177670994956[273] = 0;
   out_2734333177670994956[274] = 0;
   out_2734333177670994956[275] = 0;
   out_2734333177670994956[276] = 0;
   out_2734333177670994956[277] = 0;
   out_2734333177670994956[278] = 0;
   out_2734333177670994956[279] = 0;
   out_2734333177670994956[280] = 0;
   out_2734333177670994956[281] = 0;
   out_2734333177670994956[282] = 0;
   out_2734333177670994956[283] = 0;
   out_2734333177670994956[284] = 0;
   out_2734333177670994956[285] = 0;
   out_2734333177670994956[286] = 1;
   out_2734333177670994956[287] = 0;
   out_2734333177670994956[288] = 0;
   out_2734333177670994956[289] = 0;
   out_2734333177670994956[290] = 0;
   out_2734333177670994956[291] = 0;
   out_2734333177670994956[292] = 0;
   out_2734333177670994956[293] = 0;
   out_2734333177670994956[294] = 0;
   out_2734333177670994956[295] = 0;
   out_2734333177670994956[296] = 0;
   out_2734333177670994956[297] = 0;
   out_2734333177670994956[298] = 0;
   out_2734333177670994956[299] = 0;
   out_2734333177670994956[300] = 0;
   out_2734333177670994956[301] = 0;
   out_2734333177670994956[302] = 0;
   out_2734333177670994956[303] = 0;
   out_2734333177670994956[304] = 0;
   out_2734333177670994956[305] = 0;
   out_2734333177670994956[306] = 0;
   out_2734333177670994956[307] = 0;
   out_2734333177670994956[308] = 1;
   out_2734333177670994956[309] = 0;
   out_2734333177670994956[310] = 0;
   out_2734333177670994956[311] = 0;
   out_2734333177670994956[312] = 0;
   out_2734333177670994956[313] = 0;
   out_2734333177670994956[314] = 0;
   out_2734333177670994956[315] = 0;
   out_2734333177670994956[316] = 0;
   out_2734333177670994956[317] = 0;
   out_2734333177670994956[318] = 0;
   out_2734333177670994956[319] = 0;
   out_2734333177670994956[320] = 0;
   out_2734333177670994956[321] = 0;
   out_2734333177670994956[322] = 0;
   out_2734333177670994956[323] = 0;
   out_2734333177670994956[324] = 0;
   out_2734333177670994956[325] = 0;
   out_2734333177670994956[326] = 0;
   out_2734333177670994956[327] = 0;
   out_2734333177670994956[328] = 0;
   out_2734333177670994956[329] = 0;
   out_2734333177670994956[330] = 1;
   out_2734333177670994956[331] = 0;
   out_2734333177670994956[332] = 0;
   out_2734333177670994956[333] = 0;
   out_2734333177670994956[334] = 0;
   out_2734333177670994956[335] = 0;
   out_2734333177670994956[336] = 0;
   out_2734333177670994956[337] = 0;
   out_2734333177670994956[338] = 0;
   out_2734333177670994956[339] = 0;
   out_2734333177670994956[340] = 0;
   out_2734333177670994956[341] = 0;
   out_2734333177670994956[342] = 0;
   out_2734333177670994956[343] = 0;
   out_2734333177670994956[344] = 0;
   out_2734333177670994956[345] = 0;
   out_2734333177670994956[346] = 0;
   out_2734333177670994956[347] = 0;
   out_2734333177670994956[348] = 0;
   out_2734333177670994956[349] = 0;
   out_2734333177670994956[350] = 0;
   out_2734333177670994956[351] = 0;
   out_2734333177670994956[352] = 1;
   out_2734333177670994956[353] = 0;
   out_2734333177670994956[354] = 0;
   out_2734333177670994956[355] = 0;
   out_2734333177670994956[356] = 0;
   out_2734333177670994956[357] = 0;
   out_2734333177670994956[358] = 0;
   out_2734333177670994956[359] = 0;
   out_2734333177670994956[360] = 0;
   out_2734333177670994956[361] = 0;
   out_2734333177670994956[362] = 0;
   out_2734333177670994956[363] = 0;
   out_2734333177670994956[364] = 0;
   out_2734333177670994956[365] = 0;
   out_2734333177670994956[366] = 0;
   out_2734333177670994956[367] = 0;
   out_2734333177670994956[368] = 0;
   out_2734333177670994956[369] = 0;
   out_2734333177670994956[370] = 0;
   out_2734333177670994956[371] = 0;
   out_2734333177670994956[372] = 0;
   out_2734333177670994956[373] = 0;
   out_2734333177670994956[374] = 1;
   out_2734333177670994956[375] = 0;
   out_2734333177670994956[376] = 0;
   out_2734333177670994956[377] = 0;
   out_2734333177670994956[378] = 0;
   out_2734333177670994956[379] = 0;
   out_2734333177670994956[380] = 0;
   out_2734333177670994956[381] = 0;
   out_2734333177670994956[382] = 0;
   out_2734333177670994956[383] = 0;
   out_2734333177670994956[384] = 0;
   out_2734333177670994956[385] = 0;
   out_2734333177670994956[386] = 0;
   out_2734333177670994956[387] = 0;
   out_2734333177670994956[388] = 0;
   out_2734333177670994956[389] = 0;
   out_2734333177670994956[390] = 0;
   out_2734333177670994956[391] = 0;
   out_2734333177670994956[392] = 0;
   out_2734333177670994956[393] = 0;
   out_2734333177670994956[394] = 0;
   out_2734333177670994956[395] = 0;
   out_2734333177670994956[396] = 1;
   out_2734333177670994956[397] = 0;
   out_2734333177670994956[398] = 0;
   out_2734333177670994956[399] = 0;
   out_2734333177670994956[400] = 0;
   out_2734333177670994956[401] = 0;
   out_2734333177670994956[402] = 0;
   out_2734333177670994956[403] = 0;
   out_2734333177670994956[404] = 0;
   out_2734333177670994956[405] = 0;
   out_2734333177670994956[406] = 0;
   out_2734333177670994956[407] = 0;
   out_2734333177670994956[408] = 0;
   out_2734333177670994956[409] = 0;
   out_2734333177670994956[410] = 0;
   out_2734333177670994956[411] = 0;
   out_2734333177670994956[412] = 0;
   out_2734333177670994956[413] = 0;
   out_2734333177670994956[414] = 0;
   out_2734333177670994956[415] = 0;
   out_2734333177670994956[416] = 0;
   out_2734333177670994956[417] = 0;
   out_2734333177670994956[418] = 1;
   out_2734333177670994956[419] = 0;
   out_2734333177670994956[420] = 0;
   out_2734333177670994956[421] = 0;
   out_2734333177670994956[422] = 0;
   out_2734333177670994956[423] = 0;
   out_2734333177670994956[424] = 0;
   out_2734333177670994956[425] = 0;
   out_2734333177670994956[426] = 0;
   out_2734333177670994956[427] = 0;
   out_2734333177670994956[428] = 0;
   out_2734333177670994956[429] = 0;
   out_2734333177670994956[430] = 0;
   out_2734333177670994956[431] = 0;
   out_2734333177670994956[432] = 0;
   out_2734333177670994956[433] = 0;
   out_2734333177670994956[434] = 0;
   out_2734333177670994956[435] = 0;
   out_2734333177670994956[436] = 0;
   out_2734333177670994956[437] = 0;
   out_2734333177670994956[438] = 0;
   out_2734333177670994956[439] = 0;
   out_2734333177670994956[440] = 1;
}
void h_4(double *state, double *unused, double *out_6903605953758365865) {
   out_6903605953758365865[0] = state[10] + state[13];
   out_6903605953758365865[1] = state[11] + state[14];
   out_6903605953758365865[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1185945476069595036) {
   out_1185945476069595036[0] = 0;
   out_1185945476069595036[1] = 0;
   out_1185945476069595036[2] = 0;
   out_1185945476069595036[3] = 0;
   out_1185945476069595036[4] = 0;
   out_1185945476069595036[5] = 0;
   out_1185945476069595036[6] = 0;
   out_1185945476069595036[7] = 0;
   out_1185945476069595036[8] = 0;
   out_1185945476069595036[9] = 0;
   out_1185945476069595036[10] = 1;
   out_1185945476069595036[11] = 0;
   out_1185945476069595036[12] = 0;
   out_1185945476069595036[13] = 1;
   out_1185945476069595036[14] = 0;
   out_1185945476069595036[15] = 0;
   out_1185945476069595036[16] = 0;
   out_1185945476069595036[17] = 0;
   out_1185945476069595036[18] = 0;
   out_1185945476069595036[19] = 0;
   out_1185945476069595036[20] = 0;
   out_1185945476069595036[21] = 0;
   out_1185945476069595036[22] = 0;
   out_1185945476069595036[23] = 0;
   out_1185945476069595036[24] = 0;
   out_1185945476069595036[25] = 0;
   out_1185945476069595036[26] = 0;
   out_1185945476069595036[27] = 0;
   out_1185945476069595036[28] = 0;
   out_1185945476069595036[29] = 0;
   out_1185945476069595036[30] = 0;
   out_1185945476069595036[31] = 0;
   out_1185945476069595036[32] = 0;
   out_1185945476069595036[33] = 1;
   out_1185945476069595036[34] = 0;
   out_1185945476069595036[35] = 0;
   out_1185945476069595036[36] = 1;
   out_1185945476069595036[37] = 0;
   out_1185945476069595036[38] = 0;
   out_1185945476069595036[39] = 0;
   out_1185945476069595036[40] = 0;
   out_1185945476069595036[41] = 0;
   out_1185945476069595036[42] = 0;
   out_1185945476069595036[43] = 0;
   out_1185945476069595036[44] = 0;
   out_1185945476069595036[45] = 0;
   out_1185945476069595036[46] = 0;
   out_1185945476069595036[47] = 0;
   out_1185945476069595036[48] = 0;
   out_1185945476069595036[49] = 0;
   out_1185945476069595036[50] = 0;
   out_1185945476069595036[51] = 0;
   out_1185945476069595036[52] = 0;
   out_1185945476069595036[53] = 0;
   out_1185945476069595036[54] = 0;
   out_1185945476069595036[55] = 0;
   out_1185945476069595036[56] = 1;
   out_1185945476069595036[57] = 0;
   out_1185945476069595036[58] = 0;
   out_1185945476069595036[59] = 1;
   out_1185945476069595036[60] = 0;
   out_1185945476069595036[61] = 0;
   out_1185945476069595036[62] = 0;
   out_1185945476069595036[63] = 0;
   out_1185945476069595036[64] = 0;
   out_1185945476069595036[65] = 0;
}
void h_9(double *state, double *unused, double *out_843879415323879201) {
   out_843879415323879201[0] = state[10];
   out_843879415323879201[1] = state[11];
   out_843879415323879201[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8473164411334042506) {
   out_8473164411334042506[0] = 0;
   out_8473164411334042506[1] = 0;
   out_8473164411334042506[2] = 0;
   out_8473164411334042506[3] = 0;
   out_8473164411334042506[4] = 0;
   out_8473164411334042506[5] = 0;
   out_8473164411334042506[6] = 0;
   out_8473164411334042506[7] = 0;
   out_8473164411334042506[8] = 0;
   out_8473164411334042506[9] = 0;
   out_8473164411334042506[10] = 1;
   out_8473164411334042506[11] = 0;
   out_8473164411334042506[12] = 0;
   out_8473164411334042506[13] = 0;
   out_8473164411334042506[14] = 0;
   out_8473164411334042506[15] = 0;
   out_8473164411334042506[16] = 0;
   out_8473164411334042506[17] = 0;
   out_8473164411334042506[18] = 0;
   out_8473164411334042506[19] = 0;
   out_8473164411334042506[20] = 0;
   out_8473164411334042506[21] = 0;
   out_8473164411334042506[22] = 0;
   out_8473164411334042506[23] = 0;
   out_8473164411334042506[24] = 0;
   out_8473164411334042506[25] = 0;
   out_8473164411334042506[26] = 0;
   out_8473164411334042506[27] = 0;
   out_8473164411334042506[28] = 0;
   out_8473164411334042506[29] = 0;
   out_8473164411334042506[30] = 0;
   out_8473164411334042506[31] = 0;
   out_8473164411334042506[32] = 0;
   out_8473164411334042506[33] = 1;
   out_8473164411334042506[34] = 0;
   out_8473164411334042506[35] = 0;
   out_8473164411334042506[36] = 0;
   out_8473164411334042506[37] = 0;
   out_8473164411334042506[38] = 0;
   out_8473164411334042506[39] = 0;
   out_8473164411334042506[40] = 0;
   out_8473164411334042506[41] = 0;
   out_8473164411334042506[42] = 0;
   out_8473164411334042506[43] = 0;
   out_8473164411334042506[44] = 0;
   out_8473164411334042506[45] = 0;
   out_8473164411334042506[46] = 0;
   out_8473164411334042506[47] = 0;
   out_8473164411334042506[48] = 0;
   out_8473164411334042506[49] = 0;
   out_8473164411334042506[50] = 0;
   out_8473164411334042506[51] = 0;
   out_8473164411334042506[52] = 0;
   out_8473164411334042506[53] = 0;
   out_8473164411334042506[54] = 0;
   out_8473164411334042506[55] = 0;
   out_8473164411334042506[56] = 1;
   out_8473164411334042506[57] = 0;
   out_8473164411334042506[58] = 0;
   out_8473164411334042506[59] = 0;
   out_8473164411334042506[60] = 0;
   out_8473164411334042506[61] = 0;
   out_8473164411334042506[62] = 0;
   out_8473164411334042506[63] = 0;
   out_8473164411334042506[64] = 0;
   out_8473164411334042506[65] = 0;
}
void h_10(double *state, double *unused, double *out_1414980015961280100) {
   out_1414980015961280100[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1414980015961280100[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1414980015961280100[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_428453928759913306) {
   out_428453928759913306[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_428453928759913306[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_428453928759913306[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_428453928759913306[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_428453928759913306[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_428453928759913306[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_428453928759913306[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_428453928759913306[7] = 0;
   out_428453928759913306[8] = 0;
   out_428453928759913306[9] = 0;
   out_428453928759913306[10] = 0;
   out_428453928759913306[11] = 0;
   out_428453928759913306[12] = 0;
   out_428453928759913306[13] = 0;
   out_428453928759913306[14] = 0;
   out_428453928759913306[15] = 0;
   out_428453928759913306[16] = 1;
   out_428453928759913306[17] = 0;
   out_428453928759913306[18] = 0;
   out_428453928759913306[19] = 1;
   out_428453928759913306[20] = 0;
   out_428453928759913306[21] = 0;
   out_428453928759913306[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_428453928759913306[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_428453928759913306[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_428453928759913306[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_428453928759913306[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_428453928759913306[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_428453928759913306[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_428453928759913306[29] = 0;
   out_428453928759913306[30] = 0;
   out_428453928759913306[31] = 0;
   out_428453928759913306[32] = 0;
   out_428453928759913306[33] = 0;
   out_428453928759913306[34] = 0;
   out_428453928759913306[35] = 0;
   out_428453928759913306[36] = 0;
   out_428453928759913306[37] = 0;
   out_428453928759913306[38] = 0;
   out_428453928759913306[39] = 1;
   out_428453928759913306[40] = 0;
   out_428453928759913306[41] = 0;
   out_428453928759913306[42] = 1;
   out_428453928759913306[43] = 0;
   out_428453928759913306[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_428453928759913306[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_428453928759913306[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_428453928759913306[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_428453928759913306[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_428453928759913306[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_428453928759913306[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_428453928759913306[51] = 0;
   out_428453928759913306[52] = 0;
   out_428453928759913306[53] = 0;
   out_428453928759913306[54] = 0;
   out_428453928759913306[55] = 0;
   out_428453928759913306[56] = 0;
   out_428453928759913306[57] = 0;
   out_428453928759913306[58] = 0;
   out_428453928759913306[59] = 0;
   out_428453928759913306[60] = 0;
   out_428453928759913306[61] = 0;
   out_428453928759913306[62] = 1;
   out_428453928759913306[63] = 0;
   out_428453928759913306[64] = 0;
   out_428453928759913306[65] = 1;
}
void h_12(double *state, double *unused, double *out_8263943828113241647) {
   out_8263943828113241647[0] = state[0];
   out_8263943828113241647[1] = state[1];
   out_8263943828113241647[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5195312900973137960) {
   out_5195312900973137960[0] = 1;
   out_5195312900973137960[1] = 0;
   out_5195312900973137960[2] = 0;
   out_5195312900973137960[3] = 0;
   out_5195312900973137960[4] = 0;
   out_5195312900973137960[5] = 0;
   out_5195312900973137960[6] = 0;
   out_5195312900973137960[7] = 0;
   out_5195312900973137960[8] = 0;
   out_5195312900973137960[9] = 0;
   out_5195312900973137960[10] = 0;
   out_5195312900973137960[11] = 0;
   out_5195312900973137960[12] = 0;
   out_5195312900973137960[13] = 0;
   out_5195312900973137960[14] = 0;
   out_5195312900973137960[15] = 0;
   out_5195312900973137960[16] = 0;
   out_5195312900973137960[17] = 0;
   out_5195312900973137960[18] = 0;
   out_5195312900973137960[19] = 0;
   out_5195312900973137960[20] = 0;
   out_5195312900973137960[21] = 0;
   out_5195312900973137960[22] = 0;
   out_5195312900973137960[23] = 1;
   out_5195312900973137960[24] = 0;
   out_5195312900973137960[25] = 0;
   out_5195312900973137960[26] = 0;
   out_5195312900973137960[27] = 0;
   out_5195312900973137960[28] = 0;
   out_5195312900973137960[29] = 0;
   out_5195312900973137960[30] = 0;
   out_5195312900973137960[31] = 0;
   out_5195312900973137960[32] = 0;
   out_5195312900973137960[33] = 0;
   out_5195312900973137960[34] = 0;
   out_5195312900973137960[35] = 0;
   out_5195312900973137960[36] = 0;
   out_5195312900973137960[37] = 0;
   out_5195312900973137960[38] = 0;
   out_5195312900973137960[39] = 0;
   out_5195312900973137960[40] = 0;
   out_5195312900973137960[41] = 0;
   out_5195312900973137960[42] = 0;
   out_5195312900973137960[43] = 0;
   out_5195312900973137960[44] = 0;
   out_5195312900973137960[45] = 0;
   out_5195312900973137960[46] = 1;
   out_5195312900973137960[47] = 0;
   out_5195312900973137960[48] = 0;
   out_5195312900973137960[49] = 0;
   out_5195312900973137960[50] = 0;
   out_5195312900973137960[51] = 0;
   out_5195312900973137960[52] = 0;
   out_5195312900973137960[53] = 0;
   out_5195312900973137960[54] = 0;
   out_5195312900973137960[55] = 0;
   out_5195312900973137960[56] = 0;
   out_5195312900973137960[57] = 0;
   out_5195312900973137960[58] = 0;
   out_5195312900973137960[59] = 0;
   out_5195312900973137960[60] = 0;
   out_5195312900973137960[61] = 0;
   out_5195312900973137960[62] = 0;
   out_5195312900973137960[63] = 0;
   out_5195312900973137960[64] = 0;
   out_5195312900973137960[65] = 0;
}
void h_35(double *state, double *unused, double *out_8651411254774222807) {
   out_8651411254774222807[0] = state[7];
   out_8651411254774222807[1] = state[8];
   out_8651411254774222807[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6848107251632492379) {
   out_6848107251632492379[0] = 0;
   out_6848107251632492379[1] = 0;
   out_6848107251632492379[2] = 0;
   out_6848107251632492379[3] = 0;
   out_6848107251632492379[4] = 0;
   out_6848107251632492379[5] = 0;
   out_6848107251632492379[6] = 0;
   out_6848107251632492379[7] = 1;
   out_6848107251632492379[8] = 0;
   out_6848107251632492379[9] = 0;
   out_6848107251632492379[10] = 0;
   out_6848107251632492379[11] = 0;
   out_6848107251632492379[12] = 0;
   out_6848107251632492379[13] = 0;
   out_6848107251632492379[14] = 0;
   out_6848107251632492379[15] = 0;
   out_6848107251632492379[16] = 0;
   out_6848107251632492379[17] = 0;
   out_6848107251632492379[18] = 0;
   out_6848107251632492379[19] = 0;
   out_6848107251632492379[20] = 0;
   out_6848107251632492379[21] = 0;
   out_6848107251632492379[22] = 0;
   out_6848107251632492379[23] = 0;
   out_6848107251632492379[24] = 0;
   out_6848107251632492379[25] = 0;
   out_6848107251632492379[26] = 0;
   out_6848107251632492379[27] = 0;
   out_6848107251632492379[28] = 0;
   out_6848107251632492379[29] = 0;
   out_6848107251632492379[30] = 1;
   out_6848107251632492379[31] = 0;
   out_6848107251632492379[32] = 0;
   out_6848107251632492379[33] = 0;
   out_6848107251632492379[34] = 0;
   out_6848107251632492379[35] = 0;
   out_6848107251632492379[36] = 0;
   out_6848107251632492379[37] = 0;
   out_6848107251632492379[38] = 0;
   out_6848107251632492379[39] = 0;
   out_6848107251632492379[40] = 0;
   out_6848107251632492379[41] = 0;
   out_6848107251632492379[42] = 0;
   out_6848107251632492379[43] = 0;
   out_6848107251632492379[44] = 0;
   out_6848107251632492379[45] = 0;
   out_6848107251632492379[46] = 0;
   out_6848107251632492379[47] = 0;
   out_6848107251632492379[48] = 0;
   out_6848107251632492379[49] = 0;
   out_6848107251632492379[50] = 0;
   out_6848107251632492379[51] = 0;
   out_6848107251632492379[52] = 0;
   out_6848107251632492379[53] = 1;
   out_6848107251632492379[54] = 0;
   out_6848107251632492379[55] = 0;
   out_6848107251632492379[56] = 0;
   out_6848107251632492379[57] = 0;
   out_6848107251632492379[58] = 0;
   out_6848107251632492379[59] = 0;
   out_6848107251632492379[60] = 0;
   out_6848107251632492379[61] = 0;
   out_6848107251632492379[62] = 0;
   out_6848107251632492379[63] = 0;
   out_6848107251632492379[64] = 0;
   out_6848107251632492379[65] = 0;
}
void h_32(double *state, double *unused, double *out_3384300439832651195) {
   out_3384300439832651195[0] = state[3];
   out_3384300439832651195[1] = state[4];
   out_3384300439832651195[2] = state[5];
   out_3384300439832651195[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1046802879424879821) {
   out_1046802879424879821[0] = 0;
   out_1046802879424879821[1] = 0;
   out_1046802879424879821[2] = 0;
   out_1046802879424879821[3] = 1;
   out_1046802879424879821[4] = 0;
   out_1046802879424879821[5] = 0;
   out_1046802879424879821[6] = 0;
   out_1046802879424879821[7] = 0;
   out_1046802879424879821[8] = 0;
   out_1046802879424879821[9] = 0;
   out_1046802879424879821[10] = 0;
   out_1046802879424879821[11] = 0;
   out_1046802879424879821[12] = 0;
   out_1046802879424879821[13] = 0;
   out_1046802879424879821[14] = 0;
   out_1046802879424879821[15] = 0;
   out_1046802879424879821[16] = 0;
   out_1046802879424879821[17] = 0;
   out_1046802879424879821[18] = 0;
   out_1046802879424879821[19] = 0;
   out_1046802879424879821[20] = 0;
   out_1046802879424879821[21] = 0;
   out_1046802879424879821[22] = 0;
   out_1046802879424879821[23] = 0;
   out_1046802879424879821[24] = 0;
   out_1046802879424879821[25] = 0;
   out_1046802879424879821[26] = 1;
   out_1046802879424879821[27] = 0;
   out_1046802879424879821[28] = 0;
   out_1046802879424879821[29] = 0;
   out_1046802879424879821[30] = 0;
   out_1046802879424879821[31] = 0;
   out_1046802879424879821[32] = 0;
   out_1046802879424879821[33] = 0;
   out_1046802879424879821[34] = 0;
   out_1046802879424879821[35] = 0;
   out_1046802879424879821[36] = 0;
   out_1046802879424879821[37] = 0;
   out_1046802879424879821[38] = 0;
   out_1046802879424879821[39] = 0;
   out_1046802879424879821[40] = 0;
   out_1046802879424879821[41] = 0;
   out_1046802879424879821[42] = 0;
   out_1046802879424879821[43] = 0;
   out_1046802879424879821[44] = 0;
   out_1046802879424879821[45] = 0;
   out_1046802879424879821[46] = 0;
   out_1046802879424879821[47] = 0;
   out_1046802879424879821[48] = 0;
   out_1046802879424879821[49] = 1;
   out_1046802879424879821[50] = 0;
   out_1046802879424879821[51] = 0;
   out_1046802879424879821[52] = 0;
   out_1046802879424879821[53] = 0;
   out_1046802879424879821[54] = 0;
   out_1046802879424879821[55] = 0;
   out_1046802879424879821[56] = 0;
   out_1046802879424879821[57] = 0;
   out_1046802879424879821[58] = 0;
   out_1046802879424879821[59] = 0;
   out_1046802879424879821[60] = 0;
   out_1046802879424879821[61] = 0;
   out_1046802879424879821[62] = 0;
   out_1046802879424879821[63] = 0;
   out_1046802879424879821[64] = 0;
   out_1046802879424879821[65] = 0;
   out_1046802879424879821[66] = 0;
   out_1046802879424879821[67] = 0;
   out_1046802879424879821[68] = 0;
   out_1046802879424879821[69] = 0;
   out_1046802879424879821[70] = 0;
   out_1046802879424879821[71] = 0;
   out_1046802879424879821[72] = 1;
   out_1046802879424879821[73] = 0;
   out_1046802879424879821[74] = 0;
   out_1046802879424879821[75] = 0;
   out_1046802879424879821[76] = 0;
   out_1046802879424879821[77] = 0;
   out_1046802879424879821[78] = 0;
   out_1046802879424879821[79] = 0;
   out_1046802879424879821[80] = 0;
   out_1046802879424879821[81] = 0;
   out_1046802879424879821[82] = 0;
   out_1046802879424879821[83] = 0;
   out_1046802879424879821[84] = 0;
   out_1046802879424879821[85] = 0;
   out_1046802879424879821[86] = 0;
   out_1046802879424879821[87] = 0;
}
void h_13(double *state, double *unused, double *out_5825044127856092602) {
   out_5825044127856092602[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5825044127856092602[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5825044127856092602[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1730508795022754155) {
   out_1730508795022754155[0] = 0;
   out_1730508795022754155[1] = 0;
   out_1730508795022754155[2] = 0;
   out_1730508795022754155[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1730508795022754155[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1730508795022754155[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1730508795022754155[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1730508795022754155[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1730508795022754155[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1730508795022754155[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1730508795022754155[10] = 0;
   out_1730508795022754155[11] = 0;
   out_1730508795022754155[12] = 0;
   out_1730508795022754155[13] = 0;
   out_1730508795022754155[14] = 0;
   out_1730508795022754155[15] = 0;
   out_1730508795022754155[16] = 0;
   out_1730508795022754155[17] = 0;
   out_1730508795022754155[18] = 0;
   out_1730508795022754155[19] = 0;
   out_1730508795022754155[20] = 0;
   out_1730508795022754155[21] = 0;
   out_1730508795022754155[22] = 0;
   out_1730508795022754155[23] = 0;
   out_1730508795022754155[24] = 0;
   out_1730508795022754155[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1730508795022754155[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1730508795022754155[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1730508795022754155[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1730508795022754155[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1730508795022754155[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1730508795022754155[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1730508795022754155[32] = 0;
   out_1730508795022754155[33] = 0;
   out_1730508795022754155[34] = 0;
   out_1730508795022754155[35] = 0;
   out_1730508795022754155[36] = 0;
   out_1730508795022754155[37] = 0;
   out_1730508795022754155[38] = 0;
   out_1730508795022754155[39] = 0;
   out_1730508795022754155[40] = 0;
   out_1730508795022754155[41] = 0;
   out_1730508795022754155[42] = 0;
   out_1730508795022754155[43] = 0;
   out_1730508795022754155[44] = 0;
   out_1730508795022754155[45] = 0;
   out_1730508795022754155[46] = 0;
   out_1730508795022754155[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1730508795022754155[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1730508795022754155[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1730508795022754155[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1730508795022754155[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1730508795022754155[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1730508795022754155[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1730508795022754155[54] = 0;
   out_1730508795022754155[55] = 0;
   out_1730508795022754155[56] = 0;
   out_1730508795022754155[57] = 0;
   out_1730508795022754155[58] = 0;
   out_1730508795022754155[59] = 0;
   out_1730508795022754155[60] = 0;
   out_1730508795022754155[61] = 0;
   out_1730508795022754155[62] = 0;
   out_1730508795022754155[63] = 0;
   out_1730508795022754155[64] = 0;
   out_1730508795022754155[65] = 0;
}
void h_14(double *state, double *unused, double *out_843879415323879201) {
   out_843879415323879201[0] = state[10];
   out_843879415323879201[1] = state[11];
   out_843879415323879201[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8473164411334042506) {
   out_8473164411334042506[0] = 0;
   out_8473164411334042506[1] = 0;
   out_8473164411334042506[2] = 0;
   out_8473164411334042506[3] = 0;
   out_8473164411334042506[4] = 0;
   out_8473164411334042506[5] = 0;
   out_8473164411334042506[6] = 0;
   out_8473164411334042506[7] = 0;
   out_8473164411334042506[8] = 0;
   out_8473164411334042506[9] = 0;
   out_8473164411334042506[10] = 1;
   out_8473164411334042506[11] = 0;
   out_8473164411334042506[12] = 0;
   out_8473164411334042506[13] = 0;
   out_8473164411334042506[14] = 0;
   out_8473164411334042506[15] = 0;
   out_8473164411334042506[16] = 0;
   out_8473164411334042506[17] = 0;
   out_8473164411334042506[18] = 0;
   out_8473164411334042506[19] = 0;
   out_8473164411334042506[20] = 0;
   out_8473164411334042506[21] = 0;
   out_8473164411334042506[22] = 0;
   out_8473164411334042506[23] = 0;
   out_8473164411334042506[24] = 0;
   out_8473164411334042506[25] = 0;
   out_8473164411334042506[26] = 0;
   out_8473164411334042506[27] = 0;
   out_8473164411334042506[28] = 0;
   out_8473164411334042506[29] = 0;
   out_8473164411334042506[30] = 0;
   out_8473164411334042506[31] = 0;
   out_8473164411334042506[32] = 0;
   out_8473164411334042506[33] = 1;
   out_8473164411334042506[34] = 0;
   out_8473164411334042506[35] = 0;
   out_8473164411334042506[36] = 0;
   out_8473164411334042506[37] = 0;
   out_8473164411334042506[38] = 0;
   out_8473164411334042506[39] = 0;
   out_8473164411334042506[40] = 0;
   out_8473164411334042506[41] = 0;
   out_8473164411334042506[42] = 0;
   out_8473164411334042506[43] = 0;
   out_8473164411334042506[44] = 0;
   out_8473164411334042506[45] = 0;
   out_8473164411334042506[46] = 0;
   out_8473164411334042506[47] = 0;
   out_8473164411334042506[48] = 0;
   out_8473164411334042506[49] = 0;
   out_8473164411334042506[50] = 0;
   out_8473164411334042506[51] = 0;
   out_8473164411334042506[52] = 0;
   out_8473164411334042506[53] = 0;
   out_8473164411334042506[54] = 0;
   out_8473164411334042506[55] = 0;
   out_8473164411334042506[56] = 1;
   out_8473164411334042506[57] = 0;
   out_8473164411334042506[58] = 0;
   out_8473164411334042506[59] = 0;
   out_8473164411334042506[60] = 0;
   out_8473164411334042506[61] = 0;
   out_8473164411334042506[62] = 0;
   out_8473164411334042506[63] = 0;
   out_8473164411334042506[64] = 0;
   out_8473164411334042506[65] = 0;
}
void h_33(double *state, double *unused, double *out_7000952243169395244) {
   out_7000952243169395244[0] = state[16];
   out_7000952243169395244[1] = state[17];
   out_7000952243169395244[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3697550246993634775) {
   out_3697550246993634775[0] = 0;
   out_3697550246993634775[1] = 0;
   out_3697550246993634775[2] = 0;
   out_3697550246993634775[3] = 0;
   out_3697550246993634775[4] = 0;
   out_3697550246993634775[5] = 0;
   out_3697550246993634775[6] = 0;
   out_3697550246993634775[7] = 0;
   out_3697550246993634775[8] = 0;
   out_3697550246993634775[9] = 0;
   out_3697550246993634775[10] = 0;
   out_3697550246993634775[11] = 0;
   out_3697550246993634775[12] = 0;
   out_3697550246993634775[13] = 0;
   out_3697550246993634775[14] = 0;
   out_3697550246993634775[15] = 0;
   out_3697550246993634775[16] = 1;
   out_3697550246993634775[17] = 0;
   out_3697550246993634775[18] = 0;
   out_3697550246993634775[19] = 0;
   out_3697550246993634775[20] = 0;
   out_3697550246993634775[21] = 0;
   out_3697550246993634775[22] = 0;
   out_3697550246993634775[23] = 0;
   out_3697550246993634775[24] = 0;
   out_3697550246993634775[25] = 0;
   out_3697550246993634775[26] = 0;
   out_3697550246993634775[27] = 0;
   out_3697550246993634775[28] = 0;
   out_3697550246993634775[29] = 0;
   out_3697550246993634775[30] = 0;
   out_3697550246993634775[31] = 0;
   out_3697550246993634775[32] = 0;
   out_3697550246993634775[33] = 0;
   out_3697550246993634775[34] = 0;
   out_3697550246993634775[35] = 0;
   out_3697550246993634775[36] = 0;
   out_3697550246993634775[37] = 0;
   out_3697550246993634775[38] = 0;
   out_3697550246993634775[39] = 1;
   out_3697550246993634775[40] = 0;
   out_3697550246993634775[41] = 0;
   out_3697550246993634775[42] = 0;
   out_3697550246993634775[43] = 0;
   out_3697550246993634775[44] = 0;
   out_3697550246993634775[45] = 0;
   out_3697550246993634775[46] = 0;
   out_3697550246993634775[47] = 0;
   out_3697550246993634775[48] = 0;
   out_3697550246993634775[49] = 0;
   out_3697550246993634775[50] = 0;
   out_3697550246993634775[51] = 0;
   out_3697550246993634775[52] = 0;
   out_3697550246993634775[53] = 0;
   out_3697550246993634775[54] = 0;
   out_3697550246993634775[55] = 0;
   out_3697550246993634775[56] = 0;
   out_3697550246993634775[57] = 0;
   out_3697550246993634775[58] = 0;
   out_3697550246993634775[59] = 0;
   out_3697550246993634775[60] = 0;
   out_3697550246993634775[61] = 0;
   out_3697550246993634775[62] = 1;
   out_3697550246993634775[63] = 0;
   out_3697550246993634775[64] = 0;
   out_3697550246993634775[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3746421578053593084) {
  H(in_vec, out_3746421578053593084);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_105236110951022335) {
  err_fun(nom_x, delta_x, out_105236110951022335);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2568821321730323506) {
  inv_err_fun(nom_x, true_x, out_2568821321730323506);
}
void live_H_mod_fun(double *state, double *out_4178029040380659435) {
  H_mod_fun(state, out_4178029040380659435);
}
void live_f_fun(double *state, double dt, double *out_2854293671312532649) {
  f_fun(state,  dt, out_2854293671312532649);
}
void live_F_fun(double *state, double dt, double *out_2734333177670994956) {
  F_fun(state,  dt, out_2734333177670994956);
}
void live_h_4(double *state, double *unused, double *out_6903605953758365865) {
  h_4(state, unused, out_6903605953758365865);
}
void live_H_4(double *state, double *unused, double *out_1185945476069595036) {
  H_4(state, unused, out_1185945476069595036);
}
void live_h_9(double *state, double *unused, double *out_843879415323879201) {
  h_9(state, unused, out_843879415323879201);
}
void live_H_9(double *state, double *unused, double *out_8473164411334042506) {
  H_9(state, unused, out_8473164411334042506);
}
void live_h_10(double *state, double *unused, double *out_1414980015961280100) {
  h_10(state, unused, out_1414980015961280100);
}
void live_H_10(double *state, double *unused, double *out_428453928759913306) {
  H_10(state, unused, out_428453928759913306);
}
void live_h_12(double *state, double *unused, double *out_8263943828113241647) {
  h_12(state, unused, out_8263943828113241647);
}
void live_H_12(double *state, double *unused, double *out_5195312900973137960) {
  H_12(state, unused, out_5195312900973137960);
}
void live_h_35(double *state, double *unused, double *out_8651411254774222807) {
  h_35(state, unused, out_8651411254774222807);
}
void live_H_35(double *state, double *unused, double *out_6848107251632492379) {
  H_35(state, unused, out_6848107251632492379);
}
void live_h_32(double *state, double *unused, double *out_3384300439832651195) {
  h_32(state, unused, out_3384300439832651195);
}
void live_H_32(double *state, double *unused, double *out_1046802879424879821) {
  H_32(state, unused, out_1046802879424879821);
}
void live_h_13(double *state, double *unused, double *out_5825044127856092602) {
  h_13(state, unused, out_5825044127856092602);
}
void live_H_13(double *state, double *unused, double *out_1730508795022754155) {
  H_13(state, unused, out_1730508795022754155);
}
void live_h_14(double *state, double *unused, double *out_843879415323879201) {
  h_14(state, unused, out_843879415323879201);
}
void live_H_14(double *state, double *unused, double *out_8473164411334042506) {
  H_14(state, unused, out_8473164411334042506);
}
void live_h_33(double *state, double *unused, double *out_7000952243169395244) {
  h_33(state, unused, out_7000952243169395244);
}
void live_H_33(double *state, double *unused, double *out_3697550246993634775) {
  H_33(state, unused, out_3697550246993634775);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
